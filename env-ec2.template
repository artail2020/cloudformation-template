AWSTemplateFormatVersion: 2010-09-09
Description: create EC2, IAM Role
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          Default: EC2 config
        Parameters:
          - VPCStackName
          - EC2ImageId
          - KeyName
          - MyIP
          - InstanceType
Parameters:
  VPCStackName:
    Description: Base VPC StackName
    Type: String
  EC2ImageId:
    Description: EC2 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  MyIP:
    Description: IP address allowed to access EC2
    Type: String
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t2.micro
Resources:
  # EC2起動テンプレート
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          -
            DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 8
              VolumeType: gp2
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfileEC2.Arn
        ImageId: !Ref EC2ImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
      LaunchTemplateName: !Sub
        - ${VPCStackName}-${Env}-app-template
        - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
  # EC2Instance
  EC2InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnet1A"
          GroupSet:
            - !Ref SecurityGroupEC2
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app00
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  EC2InstanceC:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnet1C"
          GroupSet:
            - !Ref SecurityGroupEC2
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app01
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  # SecurityGroup
  SecurityGroupEC2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 Security Group
      SecurityGroupIngress:
        # - SourceSecurityGroupId: !Ref SecurityGroupELB
        - CidrIp: !Ref MyIP
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: !Ref MyIP
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app-sg
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
      VpcId:
        Fn::ImportValue: !Sub "${VPCStackName}-VpcId"
  # IAM Role
  RoleEC2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Allows EC2 instances to call AWS services on your behalf.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      MaxSessionDuration: 3600
      Path: /
      RoleName: !Sub
        - ${VPCStackName}-${Env}-app-role
        - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app-role
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  # IAM InstanceProfile
  InstanceProfileEC2:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub
        - ${VPCStackName}-${Env}-app-ip
        - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
      Path: /
      Roles:
        - !Ref RoleEC2
