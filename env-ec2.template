AWSTemplateFormatVersion: 2010-09-09
Description: create EC2
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          Default: EC2 config
        Parameters:
          - VPCStackName
          - EC2ImageId
          - KeyName
          - InstanceType
          - EBSDeviceName
          - EBSVolumeType
Parameters:
  VPCStackName:
    Description: Base VPC StackName
    Type: String
  EC2ImageId:
    Description: EC2 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t2.micro
  EBSDeviceName:
    Description: EBS Device Name
    Type: String
    Default: /dev/xvda
  EBSVolumeType:
    Description: EBS Volume Type
    Type: String
    Default: gp2
Resources:
  # EC2起動テンプレート
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          -
            DeviceName: !Ref EBSDeviceName
            Ebs:
              VolumeSize: 8
              VolumeType: !Ref EBSVolumeType
        IamInstanceProfile:
          Arn:
            Fn::ImportValue: !Sub "${VPCStackName}-EC2-InstanceProfileArn"
        ImageId: !Ref EC2ImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
      LaunchTemplateName: !Sub
        - ${VPCStackName}-${Env}-app-template
        - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
  # EC2Instance
  EC2InstanceA:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnet1A"
          GroupSet:
            - Fn::ImportValue: !Sub "${VPCStackName}-EC2-SecurityGroupId"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app00
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  EC2InstanceC:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId:
            Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnet1C"
          GroupSet:
            - Fn::ImportValue: !Sub "${VPCStackName}-EC2-SecurityGroupId"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-app01
            - Env: { Fn::ImportValue: !Sub "${VPCStackName}-Env" }
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
Outputs:
  StackEC2InstanceA:
    Description: The EC2 Instance ID of Subnet A
    Value: !Ref EC2InstanceA
    Export:
      Name: !Sub "${VPCStackName}-EC2A-InstanceId"
  StackEC2InstanceC:
    Description: The EC2 Instance ID of Subnet C
    Value: !Ref EC2InstanceC
    Export:
      Name: !Sub "${VPCStackName}-EC2C-InstanceId"
