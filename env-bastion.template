AWSTemplateFormatVersion: 2010-09-09
Description: create Bastion instance
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          Default: Bastion config
        Parameters:
          - VPCStackName
          - EC2ImageId
          - KeyName
          - InstanceType
          - MyIP
Parameters:
  VPCStackName:
    Description: Base VPC StackName
    Type: String
  EC2ImageId:
    Description: EC2 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: EC2 Instance Type
    Type: String
    Default: t2.micro
  MyIP:
    Description: IP address allowed to access EC2
    Type: String
Resources:
  # Bastion RouteTable
  BastionRtb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${VPCStackName}-VpcId"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-bastion-public-rtb00
            - Env:
                Fn::ImportValue: !Sub "${VPCStackName}-Env"
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  # Bastion Route
  BastionRtbRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref BastionRtb
      GatewayId:
        Fn::ImportValue: !Sub "${VPCStackName}-IgwId"
  # Bastion Subnet
  BastionSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${VPCStackName}-VpcId"
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 255
        - Fn::Cidr:
            - Fn::ImportValue: !Sub "${VPCStackName}-VpcCidrBlock"
            - 256
            - 8
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-bastion-public-subnet00
            - Env:
                Fn::ImportValue: !Sub "${VPCStackName}-Env"
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  # Bastion SubnetRouteTableAssociation
  BastionSubnetRtbAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref BastionSubnet1A
      RouteTableId: !Ref BastionRtb
  # Bastion EC2Instance
  BastionInstance:
    Type: AWS::EC2::Instance
    Properties:
      IamInstanceProfile: !Ref BastionInstanceProfile
      ImageId: !Ref EC2ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref BastionSubnet1A
          GroupSet:
            - !Ref BastionSg
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-bastion-server
            - Env:
                Fn::ImportValue: !Sub "${VPCStackName}-Env"
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
      UserData:
        Fn::Base64: |
          #!/bin/bash
          # Java11・Jenkinsインストール
          wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
          rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
          amazon-linux-extras install epel java-openjdk11 -y
          yum install -y jenkins
          systemctl daemon-reload
          systemctl start jenkins
          # AWS CLI バージョン2インストール
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
          unzip /tmp/awscliv2.zip -d /tmp
          /tmp/aws/install
          rm -f /usr/bin/aws /usr/bin/aws_completer
          # gitインストール
          yum install -y git
          # Basiton→APPサーバ用キーペア生成
          aws ec2 create-key-pair --key-name bastion-to-app --query 'KeyMaterial' --output text > /home/ec2-user/.ssh/bastion-to-app.pem
          chmod 400 /home/ec2-user/.ssh/bastion-to-app.pem
          chown ec2-user:ec2-user /home/ec2-user/.ssh/bastion-to-app.pem
          # ansible,python2,botoインストール
          amazon-linux-extras enable ansible2
          yum clean metadata
          yum install -y ansible python2-pip
          pip install boto boto3

          yum upgrade -y
  # Bastion SecurityGroup
  BastionSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Bastion Security Group
      SecurityGroupIngress:
        - CidrIp: !Ref MyIP
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - CidrIp: !Ref MyIP
          FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-bastion-sg
            - Env:
                Fn::ImportValue: !Sub "${VPCStackName}-Env"
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
      VpcId:
        Fn::ImportValue: !Sub "${VPCStackName}-VpcId"
  # Bastion IAM Role
  BastionRoleAdmin:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Allows EC2 instances to call AWS services on your behalf.
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      MaxSessionDuration: 3600
      Path: /
      RoleName: !Sub
        - ${VPCStackName}-${Env}-bastion-role
        - Env:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCStackName}-${Env}-bastion-role
            - Env:
                Fn::ImportValue: !Sub "${VPCStackName}-Env"
        - Key: Env
          Value:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
  # Bastion IAM InstanceProfile
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub
        - ${VPCStackName}-${Env}-bastion-ip
        - Env:
            Fn::ImportValue: !Sub "${VPCStackName}-Env"
      Path: /
      Roles:
        - !Ref BastionRoleAdmin
Outputs:
