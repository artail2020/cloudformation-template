AWSTemplateFormatVersion: 2010-09-09
Description: create VPC
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          Default: VPC config
        Parameters:
          - StackEnv
          - CidrBlock
Parameters:
  StackEnv:
    Description: Stack Environment
    Type: String
  CidrBlock:
    Description: IP range
    Type: String
    Default: 10.0.0.0/16
Resources:
  # VPC
  EnvVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-vpc
        - Key: Env
          Value: !Ref StackEnv
  # InternetGateway
  EnvIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-igw
        - Key: Env
          Value: !Ref StackEnv
  # RouteTable
  PublicRtb:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref EnvVPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-public-rtb00
        - Key: Env
          Value: !Ref StackEnv
  PrivateRtb:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-private-rtb00
        - Key: Env
          Value: !Ref StackEnv
      VpcId: !Ref EnvVPC
  # GatewayAttachment
  IgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref EnvVPC
      InternetGatewayId: !Ref EnvIgw
  # Route
  RtbRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRtb
      GatewayId: !Ref EnvIgw
    DependsOn: IgwAttachment
  # Subnet
  PublicSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EnvVPC
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt EnvVPC.CidrBlock, 1, 8 ]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-public-subnet00
        - Key: Env
          Value: !Ref StackEnv
  PublicSubnet1C:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref EnvVPC
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt EnvVPC.CidrBlock, 2, 8 ]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-public-subnet01
        - Key: Env
          Value: !Ref StackEnv
  PrivateSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt EnvVPC.CidrBlock, 3, 8 ]]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-private-subnet00
        - Key: Env
          Value: !Ref StackEnv
      VpcId: !Ref EnvVPC
  PrivateSubnet1C:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt EnvVPC.CidrBlock, 4, 8 ]]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-${StackEnv}-private-subnet01
        - Key: Env
          Value: !Ref StackEnv
      VpcId: !Ref EnvVPC
  # SubnetRouteTableAssociation
  PublicSubnetRtbAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRtb
  PublicSubnetRtbAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1C
      RouteTableId: !Ref PublicRtb
  PrivateSubnetRtbAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1A
      RouteTableId: !Ref PrivateRtb
  PrivateSubnetRtbAssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1C
      RouteTableId: !Ref PrivateRtb
Outputs:
  StackEnv:
    Description: Stack Environment of VPC
    Value: !Ref StackEnv
    Export:
      Name: !Sub "${AWS::StackName}-Env"
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref EnvVPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  StackVPCCidrBlock:
    Description: The CidrBlock of the VPC
    Value: !GetAtt EnvVPC.CidrBlock
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidrBlock"
  StackIgwId:
    Description: The ID of the InternetGateway
    Value: !Ref EnvIgw
    Export:
      Name: !Sub "${AWS::StackName}-IgwId"
  StackPublicSubnet1A:
    Description: The ID of the VPC Subnet
    Value: !Ref PublicSubnet1A
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1A"
  StackPublicSubnet1C:
    Description: The ID of the VPC Subnet
    Value: !Ref PublicSubnet1C
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1C"
  StackPrivateSubnet1A:
    Description: The ID of the VPC Subnet
    Value: !Ref PrivateSubnet1A
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1A"
  StackPrivateSubnet1C:
    Description: The ID of the VPC Subnet
    Value: !Ref PrivateSubnet1C
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1C"
